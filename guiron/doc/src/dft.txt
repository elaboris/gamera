
DFT
===

``dft``
-------

``Image`` [Complex] **dft** ()


:Operates on: ``Image`` [Complex]
:Returns: ``Image`` [Complex]
:Category: DFT
:Defined in: support_fftw.py
:Author: Robert Ferguson


Calculates a discrete fourier transform on complex images.  The operation will be faster if executed on images with sizes in powers of two.

*image*

.. code:: Python

        cimage = _image_conversion.to_complex(image)
        dfted = cimage.dft()


----------

**Example 1:** dft

|dft_plugin_00_00| |dft_plugin_00_01| 

.. |dft_plugin_00_00| image:: images/dft_plugin_00_00.png
.. |dft_plugin_00_01| image:: images/dft_plugin_00_01.png



``idft``
--------

``Image`` [Complex] **idft** ()


:Operates on: ``Image`` [Complex]
:Returns: ``Image`` [Complex]
:Category: DFT
:Defined in: support_fftw.py
:Author: Robert Ferguson


Calculates the inverse discrete fourier transform of a complex image.

*image*

.. code:: Python

        cimage = _image_conversion.to_complex(image)
        cimage2 = cimage.pad_to_power_of_2()
        dfted = cimage.dft()
        ifted = dfted.idft()


----------

**Example 1:** idft

|idft_plugin_00_00| |idft_plugin_00_01| |idft_plugin_00_02| 

.. |idft_plugin_00_00| image:: images/idft_plugin_00_00.png
.. |idft_plugin_00_01| image:: images/idft_plugin_00_01.png
.. |idft_plugin_00_02| image:: images/idft_plugin_00_02.png



``log_polar``
-------------

``Image`` [Complex] **log_polar** ()


:Operates on: ``Image`` [Complex]
:Returns: ``Image`` [Complex]
:Category: DFT
:Defined in: support_fftw.py
:Author: Robert Ferguson


Converts DFT results to log-polar coordinates.  Useful for phase correlation.

*image*

.. code:: Python

        cimage = _image_conversion.to_complex(image)
        dfted = cimage.dft()
        poled = dfted.log_polar()
        logged = poled.log_scale_pixels()
        


----------

**Example 1:** log_polar

|log_polar_plugin_00_00| |log_polar_plugin_00_01| |log_polar_plugin_00_02| |log_polar_plugin_00_03| 

.. |log_polar_plugin_00_00| image:: images/log_polar_plugin_00_00.png
.. |log_polar_plugin_00_01| image:: images/log_polar_plugin_00_01.png
.. |log_polar_plugin_00_02| image:: images/log_polar_plugin_00_02.png
.. |log_polar_plugin_00_03| image:: images/log_polar_plugin_00_03.png



``log_scale_pixels``
--------------------

``Image`` [Complex] **log_scale_pixels** ()


:Operates on: ``Image`` [Complex]
:Returns: ``Image`` [Complex]
:Category: DFT
:Defined in: support_fftw.py
:Author: Robert Ferguson


Log scales the results of a fourier transform for display purposes.


.. code:: Python

        cimage = _image_conversion.to_complex(image)
        dfted = cimage.dft()
        logged = dfted.log_scale_pixels()


----------

**Example 1:** log_scale_pixels

|log_scale_pixels_plugin_00_00| |log_scale_pixels_plugin_00_01| |log_scale_pixels_plugin_00_02| 

.. |log_scale_pixels_plugin_00_00| image:: images/log_scale_pixels_plugin_00_00.png
.. |log_scale_pixels_plugin_00_01| image:: images/log_scale_pixels_plugin_00_01.png
.. |log_scale_pixels_plugin_00_02| image:: images/log_scale_pixels_plugin_00_02.png



``move_dc_to_center``
---------------------

``Image`` [Complex] **move_dc_to_center** ()


:Operates on: ``Image`` [Complex]
:Returns: ``Image`` [Complex]
:Category: DFT
:Defined in: support_fftw.py
:Author: Robert Ferguson


Moves the DC component of a fourier image to the center.  This operation is useful for visualization, but  will only work for images with even dimensions.

.. code:: Python

        cimage = _image_conversion.to_complex(image)
        dfted = cimage.dft()
        moved = dfted.move_dc_to_center()


----------

**Example 1:** move_dc_to_center

|move_dc_to_center_plugin_00_00| |move_dc_to_center_plugin_00_01| |move_dc_to_center_plugin_00_02| 

.. |move_dc_to_center_plugin_00_00| image:: images/move_dc_to_center_plugin_00_00.png
.. |move_dc_to_center_plugin_00_01| image:: images/move_dc_to_center_plugin_00_01.png
.. |move_dc_to_center_plugin_00_02| image:: images/move_dc_to_center_plugin_00_02.png



``pad_to_power_of_2``
---------------------

``Image`` [OneBit|GreyScale|Grey16|RGB|Float|Complex] **pad_to_power_of_2** ()


:Operates on: ``Image`` [OneBit|GreyScale|Grey16|RGB|Float|Complex]
:Returns: ``Image`` [OneBit|GreyScale|Grey16|RGB|Float|Complex]
:Category: DFT
:Defined in: support_fftw.py
:Author: Robert Ferguson


Returns an image padded to the nearest power of two.

----------

**Example 1:** pad_to_power_of_2

|pad_to_power_of_2_plugin_00_00| |pad_to_power_of_2_plugin_00_01| 

.. |pad_to_power_of_2_plugin_00_00| image:: images/pad_to_power_of_2_plugin_00_00.png
.. |pad_to_power_of_2_plugin_00_01| image:: images/pad_to_power_of_2_plugin_00_01.png



