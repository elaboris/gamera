dnl Copyright (C) 2001-2004 Peter Selinger.
dnl This file is part of potrace. It is free software and it is covered
dnl by the GNU general public license. See the file COPYING for details.

dnl Process this file with autoconf to produce a configure script.

dnl ----------------------------------------------------------------------
dnl Package info
AC_INIT(potrace, 1.4, selinger at users.sourceforge.net)
AC_CONFIG_SRCDIR(src/curve.c)
AM_INIT_AUTOMAKE
AC_CONFIG_HEADER(config.h)

DATE="March 2004"

dnl ----------------------------------------------------------------------
dnl The names of the installed executables are defined here, but
dnl should not normally be changed.

POTRACE=potrace
AC_DEFINE_UNQUOTED(POTRACE,"$POTRACE",Name of the potrace binary)

MKBITMAP=mkbitmap
AC_DEFINE_UNQUOTED(MKBITMAP,"$MKBITMAP",Name of the mkbitmap binary)

dnl ----------------------------------------------------------------------
dnl figure out compiler options

dnl remember user's CFLAGS, if any
iCFLAGS="$CFLAGS"

dnl Check for compiler
AC_PROG_CC

dnl If compiler is gcc, use our own CFLAGS unless user overrides them
if test "$GCC" = "yes" && test "$iCFLAGS" = ""; then
  CFLAGS="-g -O3 -Wall -ffloat-store"
fi

dnl ----------------------------------------------------------------------
dnl check for compiler bugs. 

dnl The GCC compiler has a loop optimization bug which affects potrace.
dnl Since the bug is currently pending (as of gcc version 3.3.1), we
dnl simply assume that all gcc compilers have this bug. Once the bug is
dnl fixed, we will add a test which checks the compiler version.

if test "$GCC" = "yes"; then 
  AC_MSG_CHECKING([whether gcc has bug number 12243])
  AC_DEFINE(HAVE_GCC_LOOP_BUG,, [does the C compiler have gcc bug 12243?])
  AC_MSG_RESULT(yes)
fi

dnl ----------------------------------------------------------------------
dnl check for features

AC_ARG_ENABLE(zlib,
[  --disable-zlib          disable PostScript level 3 compression])
if test "$enable_zlib" != no; then
  AC_DEFINE(HAVE_ZLIB,, do we have the zlib library?)
fi

dnl Enable optional features
AC_ARG_ENABLE(metric, 
[  --enable-metric         use metric units (centimeters) as default])
if test "$enable_metric" = yes; then
   AC_DEFINE(USE_METRIC,, do we use metric units by default?)
fi

AC_ARG_ENABLE(a4, 
[  --enable-a4             use a4 as the default papersize])
if test "$enable_a4" = yes; then
   AC_DEFINE(USE_A4,, do we use a4 papersize by default?)
fi

dnl ----------------------------------------------------------------------
dnl Calculate value of "prefix", to aid guessing of include file and
dnl library locations.

USERPREFIX="$prefix"
test "x$USERPREFIX" = xNONE && USERPREFIX="$ac_default_prefix"

dnl ----------------------------------------------------------------------
dnl Check for header files

if test "$enable_zlib" != no; then
  AC_CHECK_HEADER(zlib.h, true,
    [AC_MSG_WARN([zlib.h not found in standard location.
Trying again with -I$USERPREFIX/include])
    CPPFLAGS="$CPPFLAGS -I$USERPREFIX/include"
    dnl need to unset cached value to repeat the test
    unset ac_cv_header_zlib_h
    AC_CHECK_HEADER(zlib.h, true, 
      [AC_MSG_ERROR([cannot find zlib.h. 
Rerun ./configure with CPPFLAGS=-I<include dir> if you have the header
file in a non-standard directory, or with --disable-zlib to disable
support for PostScript level 3 compression.])
    ])
  ])
fi

dnl ----------------------------------------------------------------------
dnl Check for libraries

if test "$enable_zlib" != no; then
  AC_CHECK_LIB(z, deflate, EXTRA_LIBS="$EXTRA_LIBS -lz", 
    [AC_MSG_WARN([libz library not found in standard location.
Trying again with -L$USERPREFIX/lib])
    LDFLAGS="$LDFLAGS -L$USERPREFIX/lib"
    dnl need to unset cached value to repeat the test
    unset ac_cv_lib_z_deflate
    AC_CHECK_LIB(z, deflate, EXTRA_LIBS="$EXTRA_LIBS -lz",
      [AC_MSG_ERROR([cannot find the libz library (-lz).
Rerun ./configure with LDFLAGS=-L<lib dir> if you have the library in
a non-standard directory, or with --disable-zlib to disable support
for PostScript level 3 compression.])
    ])
  ])
fi

AC_CHECK_LIB(m, floor, true, AC_MSG_ERROR([cannot find the m library (-lm)]))

dnl ----------------------------------------------------------------------
dnl Check for library functions.
AC_CHECK_FUNC(getopt_long, , EXTRA_OBJS="$EXTRA_OBJS getopt.o getopt1.o")

dnl ----------------------------------------------------------------------
dnl Check whether we have i386 features
dnl AC_MSG_CHECKING([for Intel 386])
dnl AC_TRY_COMPILE(,
dnl 	int x;
dnl	asm("bsf %1,%0\njnz 0f\nmovl $32,%0\n0:":"=r"(x):"r"(x));
dnl	return x; /* need this so that -O2 does not optimize the asm away */
dnl , AC_MSG_RESULT(yes) 
dnl  AC_DEFINE(HAVE_I386,, can we use Intel 386 optimizations?)
dnl , AC_MSG_RESULT(no))	
dnl AC_DEFINE_UNQUOTED(HAVE_I386,"$HAVE_I386",Are we on an Intel 386 or better?)

dnl ----------------------------------------------------------------------
dnl Set up substitutions of non-standard configuration parameters
AC_SUBST(DATE)
AC_SUBST(POTRACE)
AC_SUBST(MKBITMAP)
AC_SUBST(EXTRA_OBJS)
AC_SUBST(EXTRA_LIBS)
AC_SUBST(INCLUDES)

dnl ----------------------------------------------------------------------
AC_OUTPUT([Makefile 
	   src/Makefile 
	   doc/Makefile
	   check/Makefile
	   doc/potrace.1
	   doc/mkbitmap.1
          ])
